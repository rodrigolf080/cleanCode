import random

nums = [277, 488, 674, 157, 612, 1013, 544, 309, 331, 119, 7, 645, 601, 335, 630, 754, 550, 362, 971, 576, 67, 755, 470, 445, 664, 454, 814, 425, 546, 974, 540, 899, 99, 484, 299, 625, 1017, 205, 262, 632, 726, 335, 196, 575, 365, 668, 622, 369, 461, 791, 886, 685, 316, 159, 1024, 261, 545, 436, 631, 348, 320, 881, 744, 11, 287, 994, 46, 757, 843, 146, 946, 304, 952, 698, 330, 856, 727, 1009, 488, 267, 612, 931, 644, 194, 573, 501, 479, 927, 410, 972, 940, 222, 473, 696, 396, 542, 320, 725, 919, 835, 709, 65, 434, 986, 72, 777, 67, 727, 675, 361, 856, 630, 153, 637, 849, 291, 753, 550, 475, 291, 270, 837, 813, 227, 764, 895, 38, 597, 684, 1010, 938, 121, 83, 721, 369, 591, 184, 394, 939, 143, 701, 130, 814, 175, 278, 137, 123, 312, 653, 140, 418, 296, 458, 274, 176, 178, 848, 705, 970, 893, 905, 438, 730, 720, 101, 269, 518, 380, 885, 169, 247, 979, 389, 222, 970, 865, 755, 616, 829, 534, 418, 321, 380, 202, 529, 451, 943, 729, 252, 332, 315, 711, 381, 750, 750, 122, 568, 437, 940, 466, 947, 855, 350, 216, 1002, 824, 590, 660, 916, 118, 799, 986, 967, 241, 677, 889, 469, 965, 509, 743, 990, 243, 729, 93, 356, 252, 690, 1002, 261, 808, 753, 673, 993, 1014, 362, 981, 753, 296, 919, 346, 600, 913, 301, 942, 482, 570, 520, 699, 284, 929, 186, 472, 565, 2, 661, 470]

nums.sort() # TimSort O(n logn)

def binary_search(ls, n, left, right):
  if left > right:
    return -1
  mid = (left + right) // 2
  if n == ls[mid]:
    return mid
  elif n < ls[mid]:
    return binary_search(ls, n, left, mid-1)
  else:
    return binary_search(ls, n, mid+1, right)

def binary_tree(ls, n):
  left = 0
  right = len(ls)-1
  return binary_search(ls, n, left, right)

print("---- Algorithm ----")
print(nums[binary_tree(nums, 418)])
print(nums[binary_tree(nums, 99999)])
print(nums[binary_tree(nums, 277)])
print("---- Tests ----")
print(nums[93])
print(nums[-1])
print(nums[52])
a = nums[binary_tree(nums, 418)]
b = nums[binary_tree(nums, 99999)]
c = nums[binary_tree(nums, 277)]
x = nums[93]
y = nums[-1]
z = nums[52]
flag = 0
total = 3
if (a==x):
  flag+=1
if (b==y):
  flag+=1
if (c==z):
  flag+=1
print(f"[*] Passed {flag}/{total} tests")

